<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * BomRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BomRepository extends \Doctrine\ORM\EntityRepository
{
    public function getBomsPerPage($page, $nbPerPage)
    {
        $query = $this->createQueryBuilder('bom')
            ->join('bom.ecu', 'ecu')
            ->addSelect('ecu')
            ->join('ecu.user', 'user')
            ->orderBy('bom.created', 'DESC')
            ->setFirstResult(($page - 1) * $nbPerPage)
            ->setMaxResults($nbPerPage);

        return new Paginator($query, true);
    }

    public function getBomLinesAlternatives($id)
    {
        return $this->createQueryBuilder('bom')
            ->leftJoin('bom.lines', 'line')
            ->addSelect('line')
            ->leftJoin('line.alternatives', 'alternative')
            ->addSelect('alternative')
            ->join('bom.ecu', 'ecu')
            ->addSelect('ecu')
            ->join('ecu.user', 'user')
            ->where('bom.id = :id')
            ->setParameter('id', $id)
            ->getQuery()
            ->getSingleResult()
            ;
    }
    public function getBomFullDetails($id)
    {
        return $this->createQueryBuilder('bom')
            ->leftJoin('bom.lines', 'line')
            ->addSelect('line')
            ->leftJoin('line.alternatives', 'alternative')
            ->addSelect('alternative')
            ->leftJoin('bom.quantities', 'quantity')
            ->addSelect('quantity')
            ->leftJoin('alternative.articles', 'article')
            ->addSelect('article')
            ->leftJoin('article.variables', 'variable')
            ->addSelect('variable')
            ->leftJoin('variable.prices', 'price')
            ->addSelect('price')
            ->leftJoin('article.supplier', 'supplier')
            ->addSelect('supplier')
            ->join('bom.ecu', 'ecu')
            ->addSelect('ecu')
            ->join('ecu.user', 'user')
            ->orderBy('quantity.date', 'ASC')
            ->addOrderBy('line.id', 'ASC')
            ->addOrderBy('alternative.id', 'ASC')
            ->addOrderBy('supplier.id', 'ASC')
            ->addOrderBy('article.id', 'ASC')
            ->addOrderBy('variable.validity', 'DESC')
            ->addOrderBy('price.quantity', 'ASC')
            ->where('bom.id = :id')
            ->setParameter('id', $id)
            ->getQuery()
            ->getSingleResult()
            ;
    }
}
